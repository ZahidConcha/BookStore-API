@page "/books/view/{Id}"
@inject IBookRepository bookRepo
@inject NavigationManager navManeger



@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="No Data to view"></ErrorMessage>
}
else if (Model == null)
{
    <LodingMessage Message=" Loding Details"></LodingMessage>
}

<div class="col-md-6">
    <table>
        <tr>
            <td><strong>Title </strong></td>
            <td>@Model.Title</td>
        </tr>
        <tr>
            <td><strong>Author</strong></td>
            <td>
                @if (Model.Author == null)
                {
                    <span class="text-muted">No author Recorded</span>
                }
                else
                {
                    <a href="/authors/view/@Model.AuthorId">@Model.Author.Fistname @Model.Author.Lastname</a>
                }
            </td>
        </tr>
        <tr>
            <td><strong>Summary</strong></td>
            <td>@Model.Summary</td>
        </tr>
        <tr>
            <td><strong>Published Year</strong></td>
            <td>@Model.Year</td>
        </tr>
        <tr>
            <td><strong>ISBN</strong></td>
            <td>@Model.Isbn</td>
        </tr>

    </table>
</div>
<div class="col-md-4">
    <img src="Uploads/@Model.Image" style="height:300px; width:300px;" alt="Alternate Text" />
    <h3 class="text-center text-info">@Model.Price</h3>
</div>
<a href="/books/" class="btn btn-outline-secondary"><span class="oi oi-media-step-backward"></span>Back to  List</a>







@code {
    [Parameter] public string Id { get; set; }
    private Book Model = new Book();

    protected async override Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await bookRepo.Get(EndPoints.BooksEndPoint, id);
    }
}
