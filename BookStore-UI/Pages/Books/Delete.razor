@page "/books/delete/{Id}"
@inject IBookRepository bookRepo
@inject NavigationManager navManeger
@inject IFileUpload fileUpRepo

<h4>Are you sure you want to delete?</h4>
@if (isFailed)
{
    <ErrorMessage message="Cant delete this fieled!"></ErrorMessage>
}
@if (Model == null)
{
    <LodingMessage Message="Loding Data"></LodingMessage>
}
else
{
    <div class="col-md-6">
        <table>
            <tr>
                <td><strong>Title </strong></td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td><strong>Author</strong></td>
                <td>
                    @if (Model.Author == null)
                    {
                        <span class="text-muted">No author Recorded</span>
                    }
                    else
                    {
                        <a href="/authors/view/@Model.AuthorId">@Model.Author.Fistname @Model.Author.Lastname</a>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Summary</strong></td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td><strong>Published Year</strong></td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td><strong>ISBN</strong></td>
                <td>@Model.Isbn</td>
            </tr>

        </table>
    </div>
    <div class="col-md-4">
        <img src="Uploads/@Model.Image" style="height:300px; width:300px;" alt="Alternate Text" />
        <h3 class="text-center text-info">@Model.Price</h3>
    </div>


    <button @onclick="BackList"> Back to List</button>
    <button @onclick="DeleteAuthor"> Delete</button>
}
@code {
    [Parameter] public string Id { get; set; }
    private bool isFailed = false;


    private Book Model = new Book();

    protected async override Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await bookRepo.Get(EndPoints.BooksEndPoint, id);
    }

    private async Task DeleteAuthor()
    {
        fileUpRepo.RemoveFile(Model.Image);
        bool isSucces = await bookRepo.Delete(EndPoints.BooksEndPoint, Model.Id);
        if (isSucces)
        {

            BackList();
        }
        else
        {
            isFailed = true;
        }
    }
    private void BackList()
    {
        navManeger.NavigateTo("/authors/");
    }
}
