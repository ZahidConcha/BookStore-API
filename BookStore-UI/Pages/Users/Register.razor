@page "/Register"
@inject IAutenticationRepository authrepo
@inject NavigationManager navManeger


<h3 class="card-title">Register Now</h3>
@if (!response)
{
    <ErrorMessage message="Something Went Wrong "></ErrorMessage>
}
<div class="card-body">
    <EditForm Model="registrationModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email address</label>
            <InputText Id="email" class="form-control" @bind-Value="registrationModel.EmailAddress" />
            <ValidationMessage For="@(() => registrationModel.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="registrationModel.Password" />
            <ValidationMessage For="@(() => registrationModel.Password)" />
        </div>
        <div class="form-group">
            <label for="confirmpassword">Confirm Passord</label>
            <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="registrationModel.ConfirmPassword" />
            <ValidationMessage For="@(() => registrationModel.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>




@code {
    private RegistrationModel registrationModel = new RegistrationModel();
    bool response = true;

    private async Task HandleRegistration()
    {
        response = await authrepo.Register(registrationModel);

        if (response)
        {
            navManeger.NavigateTo("/login");
        }

    }
}
